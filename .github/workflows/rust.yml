name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
          # - os: windows-latest
          - os: macOS-latest

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v4
        # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          rustflags: ''
      - name: Get dependencies
        run: ./external.sh
      - name: (Re)Generate bindings
        run: ./genbind.sh
      - name: Check formatting
        run: cargo fmt --all --check -- --color=always
      - name: Set LIBRARY_PATH for macOS
        run: echo "LIBRARY_PATH=$LIBRARY_PATH:/opt/homebrew/lib" >> $GITHUB_ENV
        if: runner.os == 'macOS'
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
